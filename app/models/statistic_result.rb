# == Schema Information
#
# Table name: statistic_results
#
#  id                       :integer          not null, primary key
#  value                    :float
#  statistic_calculation_id :integer
#  created_at               :timestamp        not null
#  updated_at               :timestamp        not null
#

require 'query_builder'

class StatisticResult < ApplicationRecord

  schema_validations unless Rails.env.test?

  include Authority::Abilities
  self.authorizer_name = 'StatisticsAuthorizer'

  belongs_to :statistic_calculation

  #
  # Statistic results are generated by
  # information provided by a statistic
  # calculation. This method should be
  # used to generate this statistic
  # result, by simply providing the
  # calculation that it will belong to.
  #
  def self.create_from_statistic_calculation(calculation)
    fl = FieldList.lazy_load_auths.where(name: "#{calculation.rule.owner.class.name.downcase}_id").first
    builder = QueryBuilder::StatQueryBuilder.builder_for_calculation(calculation,
                                                                     calculation.statistic,
                                                                     calculation.statistic_timeframe,
                                                                     calculation.statistic.statistics_operation,
                                                                     calculation.statistic.field_list,
                                                                     calculation.rule.owner,
                                                                     fl,
                                                                     calculation.statistic.criterion)
    sql = builder.sql
    stats = ActiveRecord::Base.connection.execute(sql)

    # Make sure we only have 1 result
    raise "The statistic generated no result, or multiple results" if stats.count != 1
    stat = stats[0]["statistic"]

    result = StatisticResult.new(statistic_calculation_id: calculation.id, value: stat)
    result.save
    result
  end


  def serializable_hash(options={})
    # original will allow you to access the original json object as provided by rails
    if options && options[:original]
      super
    else
      super(only:[:id,:value,:statistic_calculation_id])
    end
  end
end
